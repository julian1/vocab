<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog
xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <!-- Start with original pre-managed vocab schema (version 5) -->
	<changeSet author="craigj" id="v5">
        <sqlFile path="Vocab_db_table_creation_10092014.sql"/>
        <sqlFile path="test_seb_vocab_v5.sql"/>
	</changeSet>

	<!-- TODO
		- work out if we really need the trim.

		- IMPORTANT
			- person_organisational_affiliation, could/should have the affiliation put in
			the responsible party. but leave for the moment.
			- and leave as null if no affiliation. if only person or organisation is present.
			- but avoid for now.

		- maybe change name responsible_party to just party to distinguish from iso concept

		- group in the one changeset. - Irrespective of how we organize the union code, it doesn't make
		sense to have separate change sets for every view

		- need to go back over the handbook - and see if there are any other case/when handling that we missed

		- we could denormalize everything if we wanted, for speed this would be easy in a script.

	-->


	<!-- rename tables to get rid of _table suffix -->
	<changeSet author="julian" id="000001">
		<renameTable newTableName="affiliation_type" oldTableName="affiliation_type_table" />
		<renameTable newTableName="amendment" oldTableName="amendment_table" />
		<renameTable newTableName="association_type" oldTableName="association_type_table" />
		<renameTable newTableName="classification_scheme_association" oldTableName="classification_scheme_association_table" />
		<renameTable newTableName="classification_scheme_category" oldTableName="classification_scheme_category_table" />
		<renameTable newTableName="classification_scheme" oldTableName="classification_scheme_table" />
		<renameTable newTableName="external_associated_terms" oldTableName="external_associated_terms_table" />
		<renameTable newTableName="internal_associated_terms" oldTableName="internal_associated_terms_table" />
		<renameTable newTableName="object_term" oldTableName="object_term_table" />
		<renameTable newTableName="organisation" oldTableName="organisation_name_table" />
		<renameTable newTableName="organisation_synonym" oldTableName="organisation_synonym_table" />
		<renameTable newTableName="person_organisational_affiliation" oldTableName="person_organisational_affiliation_table" />
		<renameTable newTableName="person" oldTableName="person_table" />
		<renameTable newTableName="reference_source" oldTableName="reference_source_table" />
		<renameTable newTableName="register_manager" oldTableName="register_manager_table" />
		<renameTable newTableName="register_owner" oldTableName="register_owner_table" />
		<renameTable newTableName="subject_term" oldTableName="subject_term_table" />
		<renameTable newTableName="term_category_classification" oldTableName="term_category_classification_table" />
		<renameTable newTableName="term_proposer" oldTableName="term_proposer_table" />
		<renameTable newTableName="vocabulary_register" oldTableName="vocabulary_register_table" />
		<renameTable newTableName="vocabulary_term" oldTableName="vocabulary_term_table" />
		<renameTable newTableName="vocabulary_type" oldTableName="vocabulary_type_table" />
	</changeSet>


	<!-- support for DDL actions -->
	<changeSet author="julian" id="0001">
       <sql>
			create function exec(text) returns text
			language plpgsql volatile
			as $$ begin execute $1; return $1; end; $$;
			grant all on function exec(text) to public
       </sql>
	</changeSet>


	<!-- organisation name -->
	<changeSet author="julian" id="0002">
		<renameColumn newColumnName="id" oldColumnName="organisation_name_id" tableName="organisation"/>
		<renameColumn newColumnName="name" oldColumnName="organisation_name" tableName="organisation"/>
		<renameColumn newColumnName="description" oldColumnName="organisation_name_description" tableName="organisation"/>
		<renameColumn newColumnName="acronym" oldColumnName="organisation_acronym" tableName="organisation"/>
		<renameColumn newColumnName="address" oldColumnName="organisation_address" tableName="organisation"/>
		<renameColumn newColumnName="status" oldColumnName="organisation_name_status" tableName="organisation"/>
		<renameColumn newColumnName="notes" oldColumnName="organisation_notes" tableName="organisation"/>
		<!-- normalize - use organisation synonym table instead -->
		<dropColumn columnName="organisation_synonym" tableName="organisation"/>
		<!-- sequence on primary key -->
		<sql>
			select exec('create sequence organisation_id_seq start '||(select max(id) +1 from organisation));
			alter table organisation alter column id set default nextval('organisation_id_seq')
		</sql>
	</changeSet>


	<!-- person -->
	<changeSet author="julian" id="0003">
		<renameColumn newColumnName="id" oldColumnName="person_id" tableName="person"/>
		<renameColumn newColumnName="name" oldColumnName="person_name" tableName="person"/>
		<renameColumn newColumnName="salutation" oldColumnName="person_salutation" tableName="person"/>
		<renameColumn newColumnName="email" oldColumnName="contact_email" tableName="person"/>
		<!-- sequence on primary key -->
		<sql>
			select exec('create sequence person_id_seq start '||(select max(id) +1 from person));
			alter table person alter column id set default nextval('person_id_seq')
		</sql>
	</changeSet>


	<!-- new table responsible party to replace register_owner, register_manager, term_proposer etc
		should probably also incorporate affiliation_type since it's a one-to-one mapping
	-->
	<changeSet author="julian" id="0004">
		<createTable tableName="responsible_party" >
			<column name="id" type="serial">
				 <constraints primaryKey="true"/>
			</column>
			<column name="person_id" type="integer"/>
			<column name="organisation_id" type="integer"/>
		</createTable>
		<addUniqueConstraint columnNames="person_id,organisation_id" tableName="responsible_party" />
		<sql>
			-- this is very flexible, for adding other entries - and affiliation_type if we need
			insert into responsible_party (person_id, organisation_id)
			select p.id, o.id
			from person p
			cross join organisation o
			where ( o.acronym ~ 'eMII' and p.name ~ 'Seb' )
			or ( o.acronym ~ 'IMOS' and p.name ~ 'Seb' )
		</sql>

	    <addForeignKeyConstraint
            constraintName="responsible_party_person_fkey"
			baseColumnNames="person_id"
            baseTableName="responsible_party"
            referencedColumnNames="id"
            referencedTableName="person"
		/>
	    <addForeignKeyConstraint
            constraintName="responsible_party_organisation_fkey"
			baseColumnNames="organisation_id"
            baseTableName="responsible_party"
            referencedColumnNames="id"
            referencedTableName="organisation"
		/>
	</changeSet>


	<!-- vocabulary_register -->
	<changeSet author="julian" id="0005">
		<!-- integer primary key -->
		<sql>
			alter table vocabulary_register drop constraint vocabulary_register_table_pkey cascade
		</sql>
		<addColumn tableName="vocabulary_register">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="vocabulary_register" />

		<!-- rename -->
		<renameColumn newColumnName="uid" oldColumnName="register_uid" tableName="vocabulary_register"/>
		<renameColumn newColumnName="name" oldColumnName="register_name" tableName="vocabulary_register"/>
		<renameColumn newColumnName="content_summary" oldColumnName="register_content_summary" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_name" oldColumnName="register_language_name" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_code" oldColumnName="register_language_code" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_country" oldColumnName="register_language_country" tableName="vocabulary_register"/>
		<renameColumn newColumnName="language_encoding" oldColumnName="register_language_encoding" tableName="vocabulary_register"/>
		<renameColumn newColumnName="version" oldColumnName="register_version" tableName="vocabulary_register"/>
		<renameColumn newColumnName="date" oldColumnName="register_date" tableName="vocabulary_register"/>

		<!-- constraints -->
		<addUniqueConstraint columnNames="name" tableName="vocabulary_register" />
		<addNotNullConstraint columnName="name" tableName="vocabulary_register"/>

		<addUniqueConstraint columnNames="uid" tableName="vocabulary_register" />
		<addNotNullConstraint columnName="uid" tableName="vocabulary_register"/>


		<!-- use responsible_party and drop register_manager table -->
		<addColumn tableName="vocabulary_register">
			<column name="manager_responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- eg. 1
			update vocabulary_register vr set manager_responsible_party_id = rp.id
			from responsible_party rp, register_manager rm
			where vr.name = rm.register_name
			and rm.person_id = rp.person_id
			and rm.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_register_manager_responsible_party_fkey"
			baseColumnNames="manager_responsible_party_id"
            baseTableName="vocabulary_register"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropTable tableName="register_manager"/>


		<!-- use responsible_party and drop register_owner table -->
		<addColumn tableName="vocabulary_register">
			<column name="owner_responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- eg. 1
			update vocabulary_register vr set owner_responsible_party_id = rp.id
			from responsible_party rp, register_owner ro
			where vr.name = ro.register_name
			and ro.person_id = rp.person_id
			and ro.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_register_owner_responsible_party_fkey"
			baseColumnNames="owner_responsible_party_id"
            baseTableName="vocabulary_register"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropTable tableName="register_owner"/>

	</changeSet>


	<!-- vocabulary_term -->
	<changeSet author="julian" id="0006">
		<!-- remove old primary key, add new integer one -->
		<sql>
			alter table vocabulary_term drop constraint vocabular_term_table_pkey cascade;
		</sql>

		<!-- primary but not serial -->
		<renameColumn newColumnName="id" oldColumnName="vocabulary_term_code" tableName="vocabulary_term"/>
		<addPrimaryKey columnNames="id" tableName="vocabulary_term" />
		<sql>
			-- drop sequence vocabulary_term_id_seq;
			select exec('create sequence vocabulary_term_id_seq start '||(select max(id) +1 from vocabulary_term));
			alter table vocabulary_term alter column id set default nextval('vocabulary_term_id_seq')
		</sql>


		<!-- unique constraint on name -->
		<renameColumn newColumnName="name" oldColumnName="vocabulary_term_name" tableName="vocabulary_term"/>
		<addUniqueConstraint columnNames="name" tableName="vocabulary_term" />
		<addNotNullConstraint columnName="name" tableName="vocabulary_term"/>

		<!-- unique constraint on uid -->
		<renameColumn newColumnName="uid" oldColumnName="vocabulary_term_uid" tableName="vocabulary_term"/>
		<addUniqueConstraint columnNames="uid" tableName="vocabulary_term" />
		<addNotNullConstraint columnName="uid" tableName="vocabulary_term"/>

		<!-- clean up column naming -->
		<renameColumn newColumnName="short_name" oldColumnName="vocabulary_term_short_name" tableName="vocabulary_term"/>
		<renameColumn newColumnName="ancillary_information" oldColumnName="vocabulary_term_ancillary_information" tableName="vocabulary_term"/>
		<renameColumn newColumnName="definition" oldColumnName="vocabulary_term_definition" tableName="vocabulary_term"/>

		<!-- normalize -->
		<dropColumn columnName="internal_relationship" tableName="vocabulary_term"/>
		<dropColumn columnName="external_relationship" tableName="vocabulary_term"/>
		<dropColumn columnName="vocabulary_instance_of" tableName="vocabulary_term"/>

		<!-- term_proposer responsible party and drop term_proposer table and existing ref -->
		<dropColumn columnName="term_proposer_id" tableName="vocabulary_term"/>
		<addColumn tableName="vocabulary_term">
			<column name="proposer_responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			update vocabulary_term set proposer_responsible_party_id = 1
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_term_proposer_responsible_party_fkey"
			baseColumnNames="proposer_responsible_party_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropTable tableName="term_proposer"/>


		<!-- vocabulary_term to use vocabulary_register(id) -->
		<addColumn tableName="vocabulary_term">
			<column name="vocabulary_register_id" type="integer"/>
		</addColumn>
		<sql>
			update vocabulary_term vt set vocabulary_register_id = vr.id
			from vocabulary_register vr
			where vr.name = vt.register_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_term_vocabulary_register_fkey"
			baseColumnNames="vocabulary_register_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="vocabulary_register"
		/>
		<dropColumn columnName="register_name" tableName="vocabulary_term"/>


		<!-- change added_by to point at person table -->
		<addColumn tableName="vocabulary_term">
			<column name="added_by_person_id" type="integer"/>
		</addColumn>
		<sql>
			update vocabulary_term vt set added_by_person_id = p.id
			from person p
			where lower( p.name) = lower( regexp_replace(vt.added_by, '(.*) (.*).*', '\2, \1'))
		</sql>
	    <addForeignKeyConstraint
            constraintName="vocabulary_term_added_by_person_fkey"
			baseColumnNames="added_by_person_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="person"
		/>
		<dropColumn columnName="added_by" tableName="vocabulary_term"/>
	</changeSet>


	<!-- external_associated_terms -->
	<changeSet author="julian" id="0007">
		<!-- not necessary for primary key here since nothing references -->

		<!-- reference vocabulary_term(id) -->
		<addColumn tableName="external_associated_terms">
			<column name="vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			update external_associated_terms a set vocabulary_term_id = v.id
			from vocabulary_term v
			where v.name = a.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="external_associated_terms_vocabulary_term_id_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="external_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
		<dropColumn columnName="vocabulary_term_name" tableName="external_associated_terms"/>

		<renameColumn newColumnName="uid" oldColumnName="external_term_uid" tableName="external_associated_terms"/>

		<!-- enforce tuple uniqueness -->
		<addUniqueConstraint columnNames="vocabulary_term_id,uid,association_type_name" tableName="external_associated_terms" />
		<addNotNullConstraint columnName="uid" tableName="external_associated_terms"/>
		<addNotNullConstraint columnName="association_type_name" tableName="external_associated_terms"/>

		<!-- delete badly loaded data, whereby external terms refer to themselves via the vocabulary_table -->
		<sql>
			delete from external_associated_terms eat
			using vocabulary_term vt
			where eat.vocabulary_term_id = vt.id
			and eat.uid = vt.uid
		</sql>

		<!-- note the uid is correct - and represents a real external resource
			that is not repeated anywhere else -->

	</changeSet>


	<!-- amendment -->
	<changeSet author="julian" id="0008">

		<!-- id is already primary key, but not serial -->
		<renameColumn newColumnName="id" oldColumnName="amendment_id" tableName="amendment"/>
		<sql>
			select exec('create sequence amendment_id_seq start '||(select max(id) +1 from amendment));
			alter table amendment alter column id set default nextval('amendment_id_seq')
		</sql>

		<addColumn tableName="amendment">
			<column name="vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			update amendment a set vocabulary_term_id = v.id
			from vocabulary_term v
			where v.name = a.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="amendment_vocabulary_term_id_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"/>
		 <addNotNullConstraint columnName="vocabulary_term_id" tableName="amendment"/>

		<!-- normalize -->
		<dropColumn columnName="vocabulary_term_name" tableName="amendment"/>
		<dropColumn columnName="vocabulary_term_code" tableName="amendment"/>


		<renameColumn newColumnName="type" oldColumnName="amendment_type" tableName="amendment"/>
		<renameColumn newColumnName="request_date" oldColumnName="amendment_request_date" tableName="amendment"/>
		<renameColumn newColumnName="approval_date" oldColumnName="amendment_approval_date" tableName="amendment"/>

		<!-- use vocabulary_register primary key id -->
		<addColumn tableName="amendment">
			<column name="vocabulary_register_id" type="integer"/>
		</addColumn>
		<sql>
			update amendment a set vocabulary_register_id = vr.id
			from vocabulary_register vr
			where vr.name = a.register_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="amendment_vocabulary_register_id_fkey"
			baseColumnNames="vocabulary_register_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="vocabulary_register"
		/>
		<dropColumn columnName="register_name" tableName="amendment"/>


		<!-- amendment to use responsible party, and drop person,organisation fields -->
		<addColumn tableName="amendment">
			<column name="responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- eg. 1
			update amendment a set responsible_party_id = rp.id
			from responsible_party rp
			where a.person_id = rp.person_id
			and a.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="amendment_responsible_party_fkey"
			baseColumnNames="responsible_party_id"
            baseTableName="amendment"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>
		<dropColumn columnName="person_id" tableName="amendment"/>
		<dropColumn columnName="organisation_name_id" tableName="amendment"/>

	</changeSet>


	<!-- association_type -->
	<changeSet author="julian" id="0009">
		<!-- name is primary key -->
		<renameColumn newColumnName="name" oldColumnName="association_type_name" tableName="association_type"/>
		<renameColumn newColumnName="description" oldColumnName="association_type_name_description" tableName="association_type"/>
	</changeSet>


	<!-- reference_source -->
	<changeSet author="julian" id="0010">
		<renameColumn newColumnName="id" oldColumnName="reference_id" tableName="reference_source"/>
		<sql>
			select exec('create sequence reference_source_id_seq start '||(select max(id) +1 from reference_source));
			alter table reference_source alter column id set default nextval('reference_source_id_seq')
		</sql>
		<renameColumn newColumnName="organisation_id" oldColumnName="organisation_name_id" tableName="reference_source"/>
	</changeSet>


	<!-- organisation synonym -->
	<changeSet author="julian" id="0011">
		<renameColumn newColumnName="id" oldColumnName="organisation_synonym_id" tableName="organisation_synonym"/>
		<sql>
			create sequence organisation_synonym_id_seq start 1;
			alter table organisation_synonym alter column id set default nextval('organisation_synonym_id_seq')
		</sql>
		<renameColumn newColumnName="name" oldColumnName="organisation_name" tableName="organisation_synonym"/>
		<renameColumn newColumnName="organisation_id" oldColumnName="organisation_name_id" tableName="organisation_synonym"/>
	</changeSet>


	<!-- affiliation_type -->
	<changeSet author="julian" id="0012">
		<!-- name is primary key -->
		<renameColumn newColumnName="name" oldColumnName="affiliation_type_name" tableName="affiliation_type"/>
		<renameColumn newColumnName="description" oldColumnName="affiliation_description" tableName="affiliation_type"/>
	</changeSet>



	<!-- person_organisational_affiliation  -->
	<!-- this is a composite primary key, should probably just be a unique constraint on the 3 terms
		or and then link with integer id. better - combine into the responsible_party concept
	-->
	<changeSet author="julian" id="0013">
		<renameColumn newColumnName="organisation_id" oldColumnName="organisation_name_id" tableName="person_organisational_affiliation"/>
	</changeSet>


	<!-- vocabulary_type -->
	<changeSet author="julian" id="0014">
		<!-- name is primary key -->
		<renameColumn newColumnName="name" oldColumnName="vocabulary_type_name" tableName="vocabulary_type"/>
		<renameColumn newColumnName="definition" oldColumnName="vocabulary_type_definition" tableName="vocabulary_type"/>
	</changeSet>


	<!-- internal_associated_terms  -->
	<changeSet author="julian" id="0015">
		<!-- nothing referencing, so doesn't need primary key -->

		<!-- avoid the indirection through the object_term and subject_term tables drop tables -->
		<addColumn tableName="internal_associated_terms">
			<column name="subject_vocabulary_term_id" type="integer"/>
		</addColumn>
		<addColumn tableName="internal_associated_terms">
			<column name="object_vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			-- note they exist as one-to-one mapping, but do it properly
			update internal_associated_terms ia
				set subject_vocabulary_term_id = vs.id,
				object_vocabulary_term_id = vo.id
				from subject_term s, object_term o, vocabulary_term vs, vocabulary_term vo
				where ia.subject_term_id = s.subject_term_id
				 and vs.name = s.vocabulary_term_name
				 and ia.object_term_id = o.object_term_id
				 and vo.name = o.vocabulary_term_name
		</sql>
	    <addForeignKeyConstraint
            constraintName="internal_associated_terms_subject_vocabulary_term_fkey"
			baseColumnNames="subject_vocabulary_term_id"
            baseTableName="internal_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
	    <addForeignKeyConstraint
            constraintName="internal_associated_terms_object_vocabulary_term_fkey"
			baseColumnNames="object_vocabulary_term_id"
            baseTableName="internal_associated_terms"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
		<dropColumn columnName="subject_term_id" tableName="internal_associated_terms"/>
		<dropColumn columnName="object_term_id" tableName="internal_associated_terms"/>
		<dropTable tableName="subject_term"/>
		<dropTable tableName="object_term"/>

		<!-- enforce tuple uniqueness - actually whole thing could be primary key -->
		<addUniqueConstraint columnNames="subject_vocabulary_term_id,object_vocabulary_term_id,association_type_name"
			tableName="internal_associated_terms" />

	</changeSet>


	<!-- term_category_classification -->
	<changeSet author="julian" id="0016">
		<!-- use vocabulary_term(id), and drop vocabulary_term_name -->
		<addColumn tableName="term_category_classification">
			<column name="vocabulary_term_id" type="integer"/>
		</addColumn>
		<sql>
			update term_category_classification tcc set vocabulary_term_id = vt.id
			from vocabulary_term vt
			where tcc.vocabulary_term_name = vt.name
		</sql>
	    <addForeignKeyConstraint
            constraintName="term_category_classification_vocabulary_term_fkey"
			baseColumnNames="vocabulary_term_id"
            baseTableName="term_category_classification"
            referencedColumnNames="id"
            referencedTableName="vocabulary_term"
		/>
		<dropColumn columnName="vocabulary_term_name" tableName="term_category_classification"/>

		<!-- normalize - these should come from the classification_scheme table which can be joined through the
		classification_scheme_category -->
		<dropColumn columnName="date_added_to_association" tableName="term_category_classification"/>
		<dropColumn columnName="classification_scheme_id" tableName="term_category_classification"/>

		<!-- normalize
		these are available by joining on the new vocabulary_term_id
		-->
		<dropColumn columnName="vocabulary_term_code" tableName="term_category_classification"/>
		<dropColumn columnName="vocabulary_term_uid" tableName="term_category_classification"/>
	</changeSet>




	<!-- classification_scheme to use responsible_party in place of person,organisation fields -->
	<changeSet author="julian" id="0017">
		<addColumn tableName="classification_scheme">
			<column name="responsible_party_id" type="integer"/>
		</addColumn>
		<sql>
			-- update classification_scheme set responsible_party_id = 2 -- Seb, Imos
			update classification_scheme cs set responsible_party_id = rp.id
			from responsible_party rp
			where cs.person_id = rp.person_id
			and cs.organisation_name_id = rp.organisation_id
		</sql>
	    <addForeignKeyConstraint
            constraintName="classification_scheme_responsible_party_fkey"
			baseColumnNames="responsible_party_id"
            baseTableName="classification_scheme"
            referencedColumnNames="id"
            referencedTableName="responsible_party"
		/>

		<dropColumn columnName="person_id" tableName="classification_scheme"/>
		<dropColumn columnName="organisation_name_id" tableName="classification_scheme"/>

		<renameColumn newColumnName="id" oldColumnName="classification_scheme_id" tableName="classification_scheme"/>
		<renameColumn newColumnName="name" oldColumnName="classification_scheme_name" tableName="classification_scheme"/>
		<renameColumn newColumnName="description" oldColumnName="classification_scheme_description" tableName="classification_scheme"/>
		<renameColumn newColumnName="title" oldColumnName="classification_scheme_title" tableName="classification_scheme"/>
		<!-- id is already primary but needs a sequence	-->
		<sql>
			select exec('create sequence classification_scheme_seq start '||(select max(id) +1 from classification_scheme));
			alter table classification_scheme alter column id set default nextval('classification_scheme_seq')
		</sql>
	</changeSet>


	<!-- classification_scheme_category -->
	<changeSet author="julian" id="0018">
		<!-- should name be called uri here?
			from rdf/skos pov yes, but maybe not from higher level conceptual pov
		-->
		<renameColumn newColumnName="id" oldColumnName="classification_scheme_category_id" tableName="classification_scheme_category"/>
		<renameColumn newColumnName="name" oldColumnName="classification_scheme_category_name" tableName="classification_scheme_category"/>
		<renameColumn newColumnName="description" oldColumnName="classification_scheme_category_description" tableName="classification_scheme_category"/>
		<renameColumn newColumnName="label" oldColumnName="classification_scheme_category_label" tableName="classification_scheme_category"/>
		<!-- id is already primary but needs a sequence	-->
		<sql>
			select exec('create sequence classification_scheme_category_seq start '||(select max(id) +1 from classification_scheme_category));
			alter table classification_scheme_category alter column id set default nextval('classification_scheme_category_seq')
		</sql>
	</changeSet>


	<!-- classification_scheme_association -->
	<changeSet author="julian" id="0019">

		<!-- normalize -->
		<dropColumn columnName="hierarchy_level" tableName="classification_scheme_association"/>
		<dropColumn columnName="parent_category_name" tableName="classification_scheme_association"/>
		<dropColumn columnName="parent_category_label" tableName="classification_scheme_association"/>
		<dropColumn columnName="classification_scheme_category_label" tableName="classification_scheme_association"/>

		<!-- classification_scheme_id is available via classification_scheme_id field of
			of classification_scheme_category table which can be joined using classification_scheme_category_id
			and appears to contain more complete data.
		-->
		<dropColumn columnName="classification_scheme_id" tableName="classification_scheme_association"/>

		<!-- can be null, when it's root of the tree -->
		<renameColumn newColumnName="parent_classification_scheme_category_id" oldColumnName="parent_category_code" tableName="classification_scheme_association"/>
	    <addForeignKeyConstraint
            constraintName="classification_scheme_association_parent_classification_scheme_category_fkey"
			baseColumnNames="parent_classification_scheme_category_id"
            baseTableName="classification_scheme_association"
            referencedColumnNames="id"
            referencedTableName="classification_scheme_category"
		/>
	</changeSet>



	<!-- strip trailing slashes from uris -->
	<changeSet author="julian" id="0020">
		<sql>
			update external_associated_terms set uid = regexp_replace( uid, '\/$', '');
			update vocabulary_term set uid = regexp_replace( uid, '\/$', '')
		</sql>
	</changeSet>

	<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->

	<!-- USER VIEWS
		join the tables up in some obvious ways, to aid logical presentation to human user
	-->

	<changeSet author="julian" id="0021">
		<createView viewName="_get_uid">
			-- helps us to find the source of misc terms
			select 'external_associated_terms' as relation, 'uid' as field, uid as uid  from external_associated_terms
			union all
			select 'classification_scheme', 'name', name from classification_scheme
			union all
			select 'classification_scheme_category', 'name', name  from classification_scheme_category
			union all
			select 'external_associated_terms', 'uid', uid from external_associated_terms
			union all
			select 'reference_source', 'online_ref..', online_reference_resource from reference_source
			union all
			select 'vocabulary_register', 'uid', uid from vocabulary_register
			union all
			select 'vocabulary_term', 'uid', uid from vocabulary_term
			order by relation, field
		</createView>
	</changeSet>


	<!-- view of responsible party - should probably also have the association type
		when we refactor this -->
	<changeSet author="julian" id="0022">
		<createView viewName="_get_responsible_party">
			select
				p.name as person_name,
				o.acronym as organisation_acronym
			from responsible_party rp
			left join person p on p.id = rp.person_id
			left join organisation o on o.id = rp.organisation_id
		</createView>
	</changeSet>


	<!-- amendment
			this is organised in terms of amendment, although we use vt.uid as first ref
	-->
	<changeSet author="julian" id="0023">
		<createView viewName="_get_amendment">
			select
				trim(vt.uid) as uid,
				a.type,
				a.request_date,
				a.approval_date,
				trim( vr.name) as register_name,
				p.name as person_name,
				o.acronym as organisation_acronym
			from amendment a
			left join vocabulary_term vt on a.vocabulary_term_id = vt.id
			left join vocabulary_register vr on a.vocabulary_register_id = vr.id
			left join responsible_party rp on a.responsible_party_id = rp.id
			left join person p on p.id = rp.person_id
			left join organisation o on o.id = rp.organisation_id
		</createView>
	</changeSet>




	<!-- 	this should probably have the reference souce as the uid
	<changeSet author="julian" id="000020-7">
		<createView viewName="_get_reference_source">
			select
				trim( vt.uid) as uid,
				trim( vt.name) as name,
				trim( rs.citation_string) as citation_string,
				trim( rs.online_reference_resource) as online_reference_resource,
				trim( o.acronym) as organisation_acronym
			from vocabulary_term vt
			join reference_source rs on vt.reference_source_id = rs.id
			left join organisation o on rs.organisation_id = o.id
			order by vt.uid, rs.online_reference_resource
		</createView>
	</changeSet -->




	<!-- term -> category
		should this be category as primary thing first...?

		should be rewritten to select from  term_category_classification
	-->
	<changeSet author="julian" id="0026">
		<createView viewName="_get_term_category_classification">
			select
				trim( vt.uid) as uid,
				trim( vt.name) as name,
				trim( csc.name) as category_name,
				trim( csc.label) as category_label,
				csc.date_added as date_added
			from vocabulary_term vt
			-- get second-tier category
			join term_category_classification tcc on tcc.vocabulary_term_id = vt.id
			join classification_scheme_category csc on tcc.classification_scheme_category_id = csc.id
			order by vt.uid, csc.name
		</createView>
	</changeSet>


	<!-- category -> other category -->
	<changeSet author="julian" id="0027">
		<createView viewName="_get_classification_scheme_association">
			select
				trim( c1.name) as uid,
				trim( c1.label) as label,
				trim( c2.name) as parent_uid,
				trim( c2.label) as parent_label
			from classification_scheme_association a
			join classification_scheme_category c1 on a.classification_scheme_category_id = c1.id
			join classification_scheme_category c2 on a.parent_classification_scheme_category_id = c2.id
			order by c1.name, c2.name
		</createView>
	</changeSet>





	<!-- primary key for association_type type and use for internal and external association tables -->
	<changeSet author="julian" id="0027-1">
		<sql>
			alter table association_type drop constraint association_type_table_pkey cascade
		</sql>
		<addColumn tableName="association_type">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="association_type" />


		<addColumn tableName="internal_associated_terms">
			<column name="association_type_id" type="integer"/>
		</addColumn>

		<sql>
			update internal_associated_terms iat
			set association_type_id = at.id
			from association_type at
			where iat.association_type_name = at.name
		</sql>

	    <addForeignKeyConstraint
            constraintName="internal_associated_terms_association_type_fkey"
			baseColumnNames="association_type_id"
            baseTableName="internal_associated_terms"
            referencedColumnNames="id"
            referencedTableName="association_type"
		/>

		<dropColumn columnName="association_type_name" tableName="internal_associated_terms"/>

		<addColumn tableName="external_associated_terms">
			<column name="association_type_id" type="integer"/>
		</addColumn>
		<sql>
			update external_associated_terms eat
			set association_type_id = at.id
			from association_type at
			where eat.association_type_name = at.name
		</sql>

	    <addForeignKeyConstraint
            constraintName="external_associated_terms_association_type_fkey"
			baseColumnNames="association_type_id"
            baseTableName="external_associated_terms"
            referencedColumnNames="id"
            referencedTableName="association_type"
		/>

		<dropColumn columnName="association_type_name" tableName="external_associated_terms"/>

	</changeSet>



	<!-- term -> other term -->
	<changeSet author="julian" id="0027-2">
		<createView viewName="_get_internal_associated_terms">
			select
				trim(svt.uid) as uid,					-- subject
				trim(svt.name) as name,
				trim(at.name) as association_type_name,
				trim(ovt.uid) as parent_uid,
				trim(ovt.name) as parent_name
			from internal_associated_terms iat
			left join vocabulary_term svt on iat.subject_vocabulary_term_id = svt.id
			left join vocabulary_term ovt on iat.object_vocabulary_term_id = ovt.id
			left join association_type at on at.id = iat.association_type_id
			order by svt.uid, ovt.uid
		</createView>
	</changeSet>


	<!-- external associated terms -->
	<changeSet author="julian" id="0024">
		<createView viewName="_get_external_associated_terms">
			select
				trim(vt.uid) as uid,
				trim(vt.name) as name,
				trim(eat.uid) as external_uid,
				trim(at.name) as association_type
			from external_associated_terms eat
			left join vocabulary_term vt on eat.vocabulary_term_id = vt.id
			left join association_type at on at.id = eat.association_type_id
			order by uid, external_uid
		</createView>
	</changeSet>





	<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->
	<!-- RDF views -->


	<!-- CONCEPT SCHEME -->
	<changeSet author="julian" id="0028">

		<!-- one-to-one fields -->
		<createView viewName="_skos_concept_scheme">
			select
				s.name as subject,
				'skos:ConceptScheme'::varchar as rdf_type,
				s.date_added as dcterms_issued,
				s.title as dc_title,
				s.description as dc_description,
				o.name as dc_creator,
				p.name as dc_publisher,
				null as dcterms_hasversion

			from classification_scheme s

			join responsible_party rp on rp.id = s.responsible_party_id
			join organisation o on rp.organisation_id = o.id

			join responsible_party rp2 on rp2.id = s.responsible_party_id
			join person p on rp2.person_id = p.id

			union all


			select
				vr.uid as subject,
				'skos:ConceptScheme'::varchar as rdf_type,
				vr.date as dcterms_issued,
				vr.name as dc_title,
				vr.content_summary as dc_description,
				o.name as dc_creator,
				p.name as dc_publisher,
				vr.version as dcterms_hasversion


			from vocabulary_register vr

			join responsible_party rp on rp.id = vr. owner_responsible_party_id
			join organisation o on rp.organisation_id = o.id

			join responsible_party rp2 on rp2.id = vr. owner_responsible_party_id
			join person p on rp2.person_id = p.id


		</createView>

		<createView viewName="_rdf_concept_scheme">
			select
				s.subject as subject, 'rdf:type' as predicate, s.rdf_type as object
			from _skos_concept_scheme s
			union all
			select
				s.subject, 'dcterms:issued', s.dcterms_issued::varchar
			from _skos_concept_scheme s
			union all
			select
				s.subject, 'dc:title', s.dc_title
			from _skos_concept_scheme s
			union all
			select
				s.subject, 'dc:description', s.dc_description
			from _skos_concept_scheme s
			union all
			select
				s.subject, 'dc:creator', s.dc_creator
			from _skos_concept_scheme s
			union all
			select
				s.subject, 'dc:publisher', s.dc_publisher
			from _skos_concept_scheme s
			union all
			select
				s.subject, 'dcterms:hasVersion', s.dcterms_hasversion
			from _skos_concept_scheme s
		</createView>
	</changeSet>

	<!-- Concept Scheme -->


	<changeSet author="julian" id="0029">

		<createView viewName="_term_classification_scheme_category">
			-- map the classification_scheme_category id's with the term id.
			-- we only deal with one level of indirection via the iat, because
			-- that's all that the data requires

			-- TODO this should probably be a view, so it can be planned in the query optimiser
			-- rather than created as a temporary table
			-- constrained internal associations
			with ciat as (
				select iat.*
				from internal_associated_terms iat
				left join association_type at on at.id = iat.association_type_id
				where at.name = 'isInstanceOf'
			)
			select
			vt1.id as vocabulary_term_id,
			case when csc1.id is not null
				then csc1.id
				else csc2.id
			end as classification_scheme_category_id

			from vocabulary_term vt1
			-- join directly through tcc
			left join term_category_classification tcc1 on tcc1.vocabulary_term_id = vt1.id
			left join classification_scheme_category csc1 on tcc1.classification_scheme_category_id = csc1.id

			-- join through iat
			left join ciat iat on iat.subject_vocabulary_term_id = vt1.id
			left join term_category_classification tcc2 on tcc2.vocabulary_term_id = iat.object_vocabulary_term_id
			left join classification_scheme_category csc2 on tcc2.classification_scheme_category_id = csc2.id
		</createView>

		<createView viewName="_term_classification_scheme">
			-- map the classification_scheme id's with the the term id, by looking through the
			-- classification_scheme_category.
			-- note that all classification_scheme_category's maintain a ref to the classification_scheme
			-- not just root ones.
			select
				mv.vocabulary_term_id as vocabulary_term_id,
				csc.classification_scheme_id as classification_scheme_id
			from _term_classification_scheme_category mv
			join classification_scheme_category csc on csc.id =  mv.classification_scheme_category_id
			join classification_scheme cs on cs.id = csc.classification_scheme_id
		</createView>


	</changeSet>




	<!-- CONCEPT -->

	<changeSet author="julian" id="0030">

		<!-- one-to-one fields -->
		<createView viewName="_skos_concept">
			select
				c.name as subject,
				'skos:Concept'::varchar as rdf_type,
				c.label as skos_preflabel,
				c.description as skos_definition,
				c.date_added as dcterms_issued,
				-- should be issued ?
				null as dcterms_created,
				null as dc_source,
				null as dc_publisher

			from classification_scheme_category c

			union all
			select
				vt.uid as subject,
				'skos:Concept'::varchar as rdf_type,
				vt.name as skos_preflabel,
				vt.definition as skos_definition,
				null as dcterms_issued,
				-- should be issued ?
				vt.date_added as dcterms_created,
				case when rs.citation_string is not null
					then rs.citation_string
					else vr.name
				end as dc_source,
				case
					when rso.name is not null
					then rso.name
					else vro.name
				end as dc_publisher


			from vocabulary_term vt

			left join vocabulary_register vr on vt.vocabulary_register_id = vr.id

			-- should be left, since we explicitly test for null
			left join reference_source rs on vt.reference_source_id = rs.id

			-- reference source organisation
			left join organisation rso on rs.organisation_id = rso.id
			-- vocabulary register organisation
			-- Bad Data? or migration - contains references to value 52 but there is no corresponding organisation
			-- in the original data
			left join responsible_party rp on vr.owner_responsible_party_id = rp.id
			left join organisation vro on rp.organisation_id = vro.id

		</createView>

		<!-- the inscheme stuff isn't right because it could be in several schemes -->


		<!-- top concept won't have broader -->
		<!-- one-to-many -->
		<createView viewName="_skos_concept_skos_broader">
			select
				c1.name as subject,
				c2.name as object
			from classification_scheme_association a
			join classification_scheme_category c1 on a.classification_scheme_category_id = c1.id
			join classification_scheme_category c2 on a.parent_classification_scheme_category_id = c2.id
			-- order by c2.name, c1.name

			union all
			select
				vt.uid as subject,
				-- 'skos:broader' as predicate,
				csc.name as object
			from vocabulary_term vt
			-- get second-tier category
			join term_category_classification tcc on tcc.vocabulary_term_id = vt.id
			join classification_scheme_category csc on tcc.classification_scheme_category_id = csc.id

			union all

			select
                svt.uid as subject,
                -- 'skos:broader' as predicate,
                ovt.uid as object
            from internal_associated_terms iat
            left join vocabulary_term svt on iat.subject_vocabulary_term_id = svt.id
            left join vocabulary_term ovt on iat.object_vocabulary_term_id = ovt.id
			left join association_type at on iat.association_type_id = at.id
            where at.name = 'isInstanceOf'


		</createView>

		<!-- should be constrained to be top concept only -->
		<createView viewName="_skos_concept_skos_narrower">
			select
				object as subject,
				subject as object
			from _skos_concept_skos_broader
		</createView>

		<createView viewName="_skos_concept_skos_inscheme">

			select
				vt.uid as subject,
				vr.uid as object
			from vocabulary_term vt
			join vocabulary_register vr on vr.id = vt.vocabulary_register_id

			union all

			select
				c.name as subject,
				s.name as object
			from classification_scheme_category c
			join classification_scheme_association a on c.id = a.classification_scheme_category_id
			join classification_scheme s on c.classification_scheme_id = s.id

			union all

			select
				vt.uid as subject,
				cs.name as object
			from _term_classification_scheme tcs
			join vocabulary_term vt on vt.id = tcs.vocabulary_term_id
			join classification_scheme cs on cs.id = tcs.classification_scheme_id
		</createView>




		<createView viewName="_rdf_concept">
			select
				c.subject as subject, 'skos:prefLabel' as predicate, c.skos_preflabel as object
			from _skos_concept  c
			union all
			select
				c.subject as subject, 'rdf:type' as predicate, c.rdf_type
			from _skos_concept  c
			union all
			select
				c.subject, 'skos:definition'::varchar, c.skos_definition
			from _skos_concept  c
			union all
			-- BOTH ISSUED AND CREATED ?
			select
				c.subject, 'dcterms:issued'::varchar, c.dcterms_issued::varchar
			from _skos_concept  c

			union all
			select
				s.subject, 'skos:inScheme'::varchar, s.object
			from _skos_concept_skos_inscheme  s

			union all
			select
				b.subject, 'skos:broader'::varchar, b.object
			from _skos_concept_skos_broader  b
			union all
			select
				n.subject, 'skos:narrower'::varchar, n.object
			from _skos_concept_skos_narrower n
			union all
			select
				c.subject, 'dcterms:created'::varchar, c.dcterms_created::varchar
			from _skos_concept  c
			union all
			select
				c.subject, 'dc:source'::varchar, c.dc_source
			from _skos_concept  c
			union all
			select
				c.subject, 'dc:publisher'::varchar, c.dc_publisher
			from _skos_concept  c


		</createView>

	</changeSet>






	<!--
		Would be nice to order term results better, eg.

		vocab=> select regexp_matches( 'http://vocab.aodn.org.au/def/ClassScheme/parameter1/Category/34', '.*/([0-9]*)$'  )    ;
			 regexp_matches
			 {34}

		vocab=> select  regexp_matches( 'http://vocab.aodn.org.au/def/ClassScheme/parameter1/Category/34', '(.*)/.*$'  )    ;
             regexp_matches
			 {http://vocab.aodn.org.au/def/ClassScheme/parameter1/Category}

        ((regexp_matches( _rdf.subject, $$.*/([0-9]*)$ $$  ))[1]::int)
	-->

	<!-- aggregate rdf view -->
	<changeSet author="julian" id="0031">
		<createView viewName="_rdf">
			select * from _rdf_concept_scheme
			union all select * from _rdf_concept

		</createView>
	</changeSet>


	<!--changeSet author="julian" id="000308">
		<sql>
			CREATE FUNCTION rdf_object( predicate_ varchar, subject_ varchar  )
			RETURNS varchar AS $$
			DECLARE
			BEGIN
				select object from _rdf where predicate = $1 and subject = $2 ;
			END;
			$$ LANGUAGE plpgsql;
		</sql>
	</changeSet-->


	<!-- Seb request. Move entries under PAR category into Physical-Water->Optical Properties,
	and remove PAR category -->
	<changeSet author="julian" id="0032">
		<sql>
			update term_category_classification
			set classification_scheme_category_id = 45
			where classification_scheme_category_id = 29;

			delete from classification_scheme_category
			where id = 29;
		</sql>
	</changeSet>


	<!-- create a matview -->
	<changeSet author="julian" id="0033">
		<sql>
			create materialized view _rdf_m as select * from _rdf;
			create index on _rdf_m( object );
			create index on _rdf_m( subject );
			create index on _rdf_m( predicate );
		</sql>
	</changeSet>


	<changeSet author="julian" id="0034">
		<createView viewName="_schema_metadata_all">
			-- create view fields as
			SELECT
					n.nspname as schema,
					c.relname as relation,
					c.relkind as kind,
					a.attname AS field,
			--      r.*,
					t.typname || '(' || a.atttypmod || ')' AS Type,
					CASE WHEN a.attnotnull = 't' THEN 'YES' ELSE 'NO' END AS _notnull,
					-- CASE WHEN r.contype = 'p' THEN 'PRI' ELSE '' END AS Key,
			--        r.contype as Contype,
					(SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid)
							FROM
									pg_catalog.pg_attrdef d
							WHERE
									d.adrelid = a.attrelid
									AND d.adnum = a.attnum
									AND a.atthasdef) AS _default,
			--        ''::varchar as Extras,
					pg_get_constraintdef(c2.oid, true) as _constraint
			--from pg_attribute a
				-- left join pg_constraint c on c.conrelid = a.attrelid
			--      , pg_catalog.obj_description(239533, 8)
					, pg_catalog.col_description( c.oid, a.attnum) as _comment
			FROM
					pg_class c
					JOIN pg_attribute a ON a.attrelid = c.oid
					JOIN pg_type t ON a.atttypid = t.oid
					LEFT JOIN pg_catalog.pg_constraint r ON c.oid = r.conrelid
						AND r.conname = a.attname
					left join pg_namespace n on n.oid=c.relnamespace

				LEFT JOIN pg_constraint c2 ON (c2.conrelid = a.attrelid
				AND (c2.conkey[1] = a.attnum
				OR c2.conkey[2] = a.attnum OR c2.conkey[3] = a.attnum
				OR c2.conkey[4] = a.attnum OR c2.conkey[5] = a.attnum
				OR c2.conkey[6] = a.attnum) OR c2.conkey[7] = a.attnum
				OR c2.conkey[8] = a.attnum)
			WHERE
			 --       c.relname = 'tablename'
			--        AND a.attnum > 0
					a.attnum > 0
			--ORDER BY a.attnum
			ORDER BY n.nspname, c.relname , a.attnum;
		</createView>


		<createView viewName="_schema_metadata">
			select
				relation, field, type, _notnull, _default, _constraint, _comment
			from _schema_metadata_all
			where schema = current_schema()
			and kind = 'r'
			and relation not in ('databasechangelog', 'databasechangeloglock' )
		</createView>
	</changeSet>

	<!-- example comment -->
	<changeSet author="julian" id="0035">
		<sql>
			comment on column amendment.request_date is 'date amendment request was created';
		</sql>
	</changeSet>


	<!-- reinstate unit_view for geoserver -->
	<changeSet author="julian" id="0036">
		<createView viewName="unit_view">
			SELECT vocabulary_term.id,
				vocabulary_term.name,
				vocabulary_term.short_name,
				vocabulary_term.definition,
				vocabulary_term.date_added
			FROM contr_vocab_db.vocabulary_term
			WHERE vocabulary_term.vocabulary_type_name = 'UnitsOfMeasure'::bpchar
			ORDER BY vocabulary_term.name;
		</createView>
	</changeSet>

	<!-- organisational_affiliation helper view -->
	<changeSet author="julian" id="0037">
		<createView viewName="_get_organisational_affiliation">
			select
				p.name as person,
				o.name as organisation,
				poa.affiliation_type_name as affiliation
			from person_organisational_affiliation poa
			join person p on p.id = poa.person_id
			join organisation o on o.id = poa.organisation_id ;
		</createView>
	</changeSet>


	<!-- add primary id's for these join tables to aid db reverse engineering, orm etc -->
	<changeSet author="julian" id="0038">
		<addColumn tableName="internal_associated_terms">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="internal_associated_terms"/>

		<addColumn tableName="external_associated_terms">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="external_associated_terms"/>

	</changeSet>


	<!-- merge person_organisational_affiliatio into responsible_party -->
	<changeSet author="julian" id="0039">

		<!-- do this first to make cascading keys easier -->
		<dropView viewName="_get_organisational_affiliation"/>
		<dropTable tableName="person_organisational_affiliation"/>

		<!-- parties not yet added -->
		<sql>
			insert into responsible_party (person_id, organisation_id)
			select p.id, o.id
			from person p
			cross join organisation o
			where ( o.acronym ~ 'eMII' and p.name ~ 'Natalia' )
			or ( o.acronym ~ 'AAD' and p.name ~ 'Kim' )
		</sql>

		<dropForeignKeyConstraint baseTableName="affiliation_type" constraintName="affiliation_type_table_pkey"/>

		<!-- create primary key for affiliation type -->
		<addColumn tableName="affiliation_type">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="affiliation_type" />

		<!-- reference from responsible party -->
		<addColumn tableName="responsible_party">
			<column name="affiliation_type_id" type="serial"/>
		</addColumn>

		<!-- update responsible_party to use -->
		<sql>
			update responsible_party
			set affiliation_type_id = at.id
			from affiliation_type at
			where at.name = 'employedBy'
		</sql>

	    <addForeignKeyConstraint
            constraintName="responsible_party_affiliation_type_fkey"
			baseColumnNames="affiliation_type_id"
            baseTableName="responsible_party"
            referencedColumnNames="id"
            referencedTableName="affiliation_type"
		/>

		<!-- recreate view -->
		<dropView viewName="_get_responsible_party"/>
		<createView viewName="_get_responsible_party">
			select
				p.name as person_name,
				o.acronym as organisation_acronym,
				at.name as affiliation_type_name
			from responsible_party rp
			left join person p on p.id = rp.person_id
			left join organisation o on o.id = rp.organisation_id
			left join affiliation_type at on at.id = rp.affiliation_type_id
		</createView>
	</changeSet>


	<!-- primary keys help reveng gorm/hibernate mappings -->
	<changeSet author="julian" id="0040">
		<addColumn tableName="term_category_classification">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="term_category_classification" />


		<addColumn tableName="classification_scheme_association">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="classification_scheme_association" />

	</changeSet>

	<!-- fix up register_source.organisation foreign key, by first creating non-existent organisation record -->
	<changeSet author="julian" id="0041">
		<sql>
			insert into organisation( name, acronym) values ('seadatanet FIXME', 'seadatanet' );
		</sql>
		<!-- register_source is currently filled with orphaned value 52, so update with ref to seadatanet -->
		<sql>
			update reference_source
			set organisation_id = o.id
			from organisation o
			where o.name = 'seadatanet FIXME'
		</sql>
	    <addForeignKeyConstraint
            constraintName="reference_source_organisation_fkey"
			baseColumnNames="organisation_id"
            baseTableName="reference_source"
            referencedColumnNames="id"
            referencedTableName="organisation"
		/>

		<addNotNullConstraint columnName="organisation_id" tableName="reference_source"/>
	</changeSet>



	<!-- primary key for vocabulary type and use it from vocabulary_term -->
	<changeSet author="julian" id="0042">
		<sql>
			alter table vocabulary_type drop constraint vocabulary_type_table_pkey cascade
		</sql>
		<addColumn tableName="vocabulary_type">
			<column name="id" type="serial"/>
		</addColumn>
		<addPrimaryKey columnNames="id" tableName="vocabulary_type" />

		<addColumn tableName="vocabulary_term">
			<column name="vocabulary_type_id" type="integer"/>
		</addColumn>

		<sql>
			update vocabulary_term vt
			set vocabulary_type_id = t.id
			from vocabulary_type t
			where vt.vocabulary_type_name = t.name
		</sql>

	    <addForeignKeyConstraint
            constraintName="vocabulary_term_vocabulary_type_fkey"
			baseColumnNames="vocabulary_type_id"
            baseTableName="vocabulary_term"
            referencedColumnNames="id"
            referencedTableName="vocabulary_type"
		/>

		<addNotNullConstraint columnName="vocabulary_type_id" tableName="vocabulary_term"/>

		<!-- type-name is used in view so we have to drop before dropping the column -->
		<dropView viewName="unit_view"/>
		<dropColumn columnName="vocabulary_type_name" tableName="vocabulary_term"/>

		<!-- re-create the view joining on new id -->
		<createView viewName="unit_view">
			select
				vt.id,
				vt.name,
				vt.short_name,
				vt.definition,
				vt.date_added
			from vocabulary_term vt
			join vocabulary_type t on t.id = vt.vocabulary_type_id
			where t.name = 'UnitsOfMeasure'
			order by vt.name;
		</createView>

	</changeSet>



	<!-- avoid clash with hibernate version field -->
    <changeSet author="julian" id="0043">
        <renameColumn newColumnName="_version" oldColumnName="version" tableName="vocabulary_register"/>
    </changeSet>

	<changeSet author="dnahodil and anguss" id="0044">
		<sql>
			drop materialized view _rdf_m;
		</sql>

		<dropView viewName="_rdf" />
		<dropView viewName="_rdf_concept" />
		<dropView viewName="_skos_concept" />
		
		<createView viewName="_skos_concept" replaceIfExists="true">
			select
				c.name as subject,
				'skos:Concept'::varchar as rdf_type,
				c.label as skos_preflabel,
				c.description as skos_definition,
				c.date_added as dcterms_issued,
				-- should be issued ?
				null as dcterms_created,
				null as dc_source,
				null as dc_publisher,
				null as dc_description
			from classification_scheme_category c

			union all
			select
				vt.uid as subject,
				'skos:Concept'::varchar as rdf_type,
				vt.name as skos_preflabel,
				vt.definition as skos_definition,
				null as dcterms_issued,
				-- should be issued ?
				vt.date_added as dcterms_created,
				rs.citation_string as dc_source,
				rso.name as dc_publisher,
				case
					when vr.uid = 'http://vocab.aodn.org.au/def/platform'
					then vt.ancillary_information
					else null
				end as dc_description
			from vocabulary_term vt

			left join vocabulary_register vr on vt.vocabulary_register_id = vr.id

			-- should be left, since we explicitly test for null
			left join reference_source rs on vt.reference_source_id = rs.id

			-- reference source organisation
			left join organisation rso on rs.organisation_id = rso.id
			-- vocabulary register organisation
			-- Bad Data? or migration - contains references to value 52 but there is no corresponding organisation
			-- in the original data
			left join responsible_party rp on vr.owner_responsible_party_id = rp.id
			left join organisation vro on rp.organisation_id = vro.id
		</createView>

		<createView viewName="_rdf_concept">
			select
				c.subject as subject, 'skos:prefLabel' as predicate, c.skos_preflabel as object
			from _skos_concept c
			union all
			select
				c.subject as subject, 'rdf:type' as predicate, c.rdf_type
			from _skos_concept c
			union all
			select
				c.subject, 'skos:definition'::varchar, c.skos_definition
			from _skos_concept c
			union all
			-- BOTH ISSUED AND CREATED ?
			select
				c.subject, 'dcterms:issued'::varchar, c.dcterms_issued::varchar
			from _skos_concept c
			union all
			select
				s.subject, 'skos:inScheme'::varchar, s.object
			from _skos_concept_skos_inscheme s
			union all
			select
				b.subject, 'skos:broader'::varchar, b.object
			from _skos_concept_skos_broader b
			union all
			select
				n.subject, 'skos:narrower'::varchar, n.object
			from _skos_concept_skos_narrower n
			union all
			select
				c.subject, 'dcterms:created'::varchar, c.dcterms_created::varchar
			from _skos_concept c
			union all
			select
				c.subject, 'dc:source'::varchar, c.dc_source
			from _skos_concept c
			union all
			select
				c.subject, 'dc:publisher'::varchar, c.dc_publisher
			from _skos_concept c
		</createView>

		<createView viewName="_rdf">
			select * from _rdf_concept_scheme
			union all select * from _rdf_concept
		</createView>

		<sql>
			create materialized view _rdf_m as select * from _rdf;
			create index on _rdf_m( object );
			create index on _rdf_m( subject );
			create index on _rdf_m( predicate );
		</sql>
	</changeSet>

	<changeSet author="dnahodil" id="0045">

		<sql>drop materialized view _rdf_m;</sql>
		<dropView viewName="_rdf" />
		<dropView viewName="_rdf_concept" />
		<dropView viewName="_rdf_concept_scheme" />

		<createView viewName="_rdf_concept_scheme">
			select
				s.subject as subject,
				'rdf:type' as predicate,
				s.rdf_type as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dcterms:issued' as predicate,
				s.dcterms_issued::varchar as object
			from _skos_concept_scheme s
			where s.dcterms_issued is not null
			union all
			select
				s.subject,
				'dc:title' as predicate,
				s.dc_title as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dc:description' as predicate,
				s.dc_description as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dc:creator' as predicate,
				s.dc_creator as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dc:publisher' as predicate,
				s.dc_publisher as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dcterms:hasVersion' as predicate,
				s.dcterms_hasversion as object
			from _skos_concept_scheme s
			where s.dcterms_hasversion is not null
		</createView>

		<createView viewName="_rdf_concept">
			select
				c.subject as subject,
				'skos:prefLabel' as predicate,
				c.skos_preflabel as object
			from _skos_concept c
			union all
			select
				c.subject as subject,
				'rdf:type' as predicate,
				c.rdf_type as object
			from _skos_concept c
			union all
			select
				c.subject,
				'skos:definition'::varchar as predicate,
				c.skos_definition as object
			from _skos_concept c
			union all
			-- BOTH ISSUED AND CREATED ?
			select
				c.subject,
				'dcterms:issued'::varchar as predicate,
				c.dcterms_issued::varchar as object
			from _skos_concept c
			where c.dcterms_issued is not null

			union all
			select
				s.subject,
				'skos:inScheme'::varchar as predicate,
				s.object
			from _skos_concept_skos_inscheme s

			union all
			select
				b.subject,
				'skos:broader'::varchar as predicate,
				b.object
			from _skos_concept_skos_broader b
			union all
			select
				n.subject,
				'skos:narrower'::varchar as predicate,
				n.object
			from _skos_concept_skos_narrower n
			union all
			select
				c.subject,
				'dcterms:created'::varchar as predicate,
				c.dcterms_created::varchar as object
			from _skos_concept c
			where c.dcterms_created is not null
			union all
			select
				c.subject,
				'dc:source'::varchar as predicate,
				c.dc_source as object
			from _skos_concept c
			where c.dc_source is not null
			union all
			select
				c.subject,
				'dc:publisher'::varchar as predicate,
				c.dc_publisher as object
			from _skos_concept c
			where c.dc_publisher is not null
		</createView>

		<createView viewName="_rdf">
			select * from _rdf_concept_scheme
			union all select * from _rdf_concept
		</createView>

		<sql>
			create materialized view _rdf_m as select * from _rdf;
			create index on _rdf_m( object );
			create index on _rdf_m( subject );
			create index on _rdf_m( predicate );
		</sql>
	</changeSet>

	<changeSet author="dnahodil" id="0046">
		<createView viewName="_skos_concept_skos_hastopconcept">
			select
				s.name as subject,
				c.name as object
			from classification_scheme_category c
			join classification_scheme_association a on c.id = a.classification_scheme_category_id
			join classification_scheme s on c.classification_scheme_id = s.id
			where a.parent_classification_scheme_category_id is null
		</createView>

		<createView viewName="_skos_concept_skos_topconceptof">
			select
				object as subject,
				subject as object
			from _skos_concept_skos_hastopconcept
		</createView>
	</changeSet>

	<changeSet author="dnahodil" id="0047">

		<sql>drop materialized view _rdf_m;</sql>
		<dropView viewName="_rdf" />
		<dropView viewName="_rdf_concept" />
		<dropView viewName="_rdf_concept_scheme" />

		<createView viewName="_rdf_concept_scheme">
			select
				s.subject as subject,
				'rdf:type' as predicate,
				s.rdf_type as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dcterms:issued' as predicate,
				s.dcterms_issued::varchar as object
			from _skos_concept_scheme s
			where s.dcterms_issued is not null
			union all
			select
				s.subject,
				'dc:title' as predicate,
				s.dc_title as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dc:description' as predicate,
				s.dc_description as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dc:creator' as predicate,
				s.dc_creator as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dc:publisher' as predicate,
				s.dc_publisher as object
			from _skos_concept_scheme s
			union all
			select
				s.subject,
				'dcterms:hasVersion' as predicate,
				s.dcterms_hasversion as object
			from _skos_concept_scheme s
			where s.dcterms_hasversion is not null
			union all
			select
				s.subject,
				'skos:hasTopConcept' as predicate,
				s.object
			from _skos_concept_skos_hastopconcept s	
		</createView>

		<createView viewName="_rdf_concept">
			select
				c.subject as subject,
				'skos:prefLabel' as predicate,
				c.skos_preflabel as object
			from _skos_concept c
			union all
			select
				c.subject as subject,
				'rdf:type' as predicate,
				c.rdf_type as object
			from _skos_concept c
			union all
			select
				c.subject,
				'skos:definition'::varchar as predicate,
				c.skos_definition as object
			from _skos_concept c
			union all
			-- BOTH ISSUED AND CREATED ?
			select
				c.subject,
				'dcterms:issued'::varchar as predicate,
				c.dcterms_issued::varchar as object
			from _skos_concept c
			where c.dcterms_issued is not null

			union all
			select
				s.subject,
				'skos:inScheme'::varchar as predicate,
				s.object
			from _skos_concept_skos_inscheme s

			union all
			select
				b.subject,
				'skos:broader'::varchar as predicate,
				b.object
			from _skos_concept_skos_broader b
			union all
			select
				n.subject,
				'skos:narrower'::varchar as predicate,
				n.object
			from _skos_concept_skos_narrower n
			union all
			select
				c.subject,
				'dcterms:created'::varchar as predicate,
				c.dcterms_created::varchar as object
			from _skos_concept c
			where c.dcterms_created is not null
			union all
			select
				c.subject,
				'dc:source'::varchar as predicate,
				c.dc_source as object
			from _skos_concept c
			where c.dc_source is not null
			union all
			select
				c.subject,
				'dc:publisher'::varchar as predicate,
				c.dc_publisher as object
			from _skos_concept c
			where c.dc_publisher is not null
			union all
			select
				s.subject,
				'skos:topConceptOf'::varchar as predicate,
				s.object
			from _skos_concept_skos_topconceptof s
		</createView>

		<createView viewName="_rdf">
			select * from _rdf_concept_scheme
			union all select * from _rdf_concept
		</createView>

		<sql>
			create materialized view _rdf_m as select * from _rdf;
			create index on _rdf_m( object );
			create index on _rdf_m( subject );
			create index on _rdf_m( predicate );
		</sql>
	</changeSet>

	<changeSet author="dnahodil" id="0048">
		<sql>
			-- Update platform UID by adding instance to the URL
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/65' WHERE uid = 'http://vocab.aodn.org.au/def/platform/65';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/66' WHERE uid = 'http://vocab.aodn.org.au/def/platform/66';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/67' WHERE uid = 'http://vocab.aodn.org.au/def/platform/67';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/68' WHERE uid = 'http://vocab.aodn.org.au/def/platform/68';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/69' WHERE uid = 'http://vocab.aodn.org.au/def/platform/69';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/71' WHERE uid = 'http://vocab.aodn.org.au/def/platform/71';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/72' WHERE uid = 'http://vocab.aodn.org.au/def/platform/72';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/73' WHERE uid = 'http://vocab.aodn.org.au/def/platform/73';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/74' WHERE uid = 'http://vocab.aodn.org.au/def/platform/74';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/99' WHERE uid = 'http://vocab.aodn.org.au/def/platform/99';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/100' WHERE uid = 'http://vocab.aodn.org.au/def/platform/100';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/101' WHERE uid = 'http://vocab.aodn.org.au/def/platform/101';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/102' WHERE uid = 'http://vocab.aodn.org.au/def/platform/102';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/103' WHERE uid = 'http://vocab.aodn.org.au/def/platform/103';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/104' WHERE uid = 'http://vocab.aodn.org.au/def/platform/104';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/105' WHERE uid = 'http://vocab.aodn.org.au/def/platform/105';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/106' WHERE uid = 'http://vocab.aodn.org.au/def/platform/106';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/107' WHERE uid = 'http://vocab.aodn.org.au/def/platform/107';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/108' WHERE uid = 'http://vocab.aodn.org.au/def/platform/108';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/109' WHERE uid = 'http://vocab.aodn.org.au/def/platform/109';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/110' WHERE uid = 'http://vocab.aodn.org.au/def/platform/110';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/111' WHERE uid = 'http://vocab.aodn.org.au/def/platform/111';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/112' WHERE uid = 'http://vocab.aodn.org.au/def/platform/112';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/113' WHERE uid = 'http://vocab.aodn.org.au/def/platform/113';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/114' WHERE uid = 'http://vocab.aodn.org.au/def/platform/114';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/115' WHERE uid = 'http://vocab.aodn.org.au/def/platform/115';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/116' WHERE uid = 'http://vocab.aodn.org.au/def/platform/116';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/117' WHERE uid = 'http://vocab.aodn.org.au/def/platform/117';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/118' WHERE uid = 'http://vocab.aodn.org.au/def/platform/118';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/119' WHERE uid = 'http://vocab.aodn.org.au/def/platform/119';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/120' WHERE uid = 'http://vocab.aodn.org.au/def/platform/120';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/121' WHERE uid = 'http://vocab.aodn.org.au/def/platform/121';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/122' WHERE uid = 'http://vocab.aodn.org.au/def/platform/122';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/123' WHERE uid = 'http://vocab.aodn.org.au/def/platform/123';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/124' WHERE uid = 'http://vocab.aodn.org.au/def/platform/124';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/125' WHERE uid = 'http://vocab.aodn.org.au/def/platform/125';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/126' WHERE uid = 'http://vocab.aodn.org.au/def/platform/126';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/127' WHERE uid = 'http://vocab.aodn.org.au/def/platform/127';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/128' WHERE uid = 'http://vocab.aodn.org.au/def/platform/128';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/129' WHERE uid = 'http://vocab.aodn.org.au/def/platform/129';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/130' WHERE uid = 'http://vocab.aodn.org.au/def/platform/130';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/131' WHERE uid = 'http://vocab.aodn.org.au/def/platform/131';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/132' WHERE uid = 'http://vocab.aodn.org.au/def/platform/132';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/133' WHERE uid = 'http://vocab.aodn.org.au/def/platform/133';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/134' WHERE uid = 'http://vocab.aodn.org.au/def/platform/134';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/135' WHERE uid = 'http://vocab.aodn.org.au/def/platform/135';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/136' WHERE uid = 'http://vocab.aodn.org.au/def/platform/136';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/137' WHERE uid = 'http://vocab.aodn.org.au/def/platform/137';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/138' WHERE uid = 'http://vocab.aodn.org.au/def/platform/138';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/139' WHERE uid = 'http://vocab.aodn.org.au/def/platform/139';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/140' WHERE uid = 'http://vocab.aodn.org.au/def/platform/140';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/141' WHERE uid = 'http://vocab.aodn.org.au/def/platform/141';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/142' WHERE uid = 'http://vocab.aodn.org.au/def/platform/142';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/143' WHERE uid = 'http://vocab.aodn.org.au/def/platform/143';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/144' WHERE uid = 'http://vocab.aodn.org.au/def/platform/144';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/145' WHERE uid = 'http://vocab.aodn.org.au/def/platform/145';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/146' WHERE uid = 'http://vocab.aodn.org.au/def/platform/146';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/147' WHERE uid = 'http://vocab.aodn.org.au/def/platform/147';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/148' WHERE uid = 'http://vocab.aodn.org.au/def/platform/148';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/149' WHERE uid = 'http://vocab.aodn.org.au/def/platform/149';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/150' WHERE uid = 'http://vocab.aodn.org.au/def/platform/150';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/151' WHERE uid = 'http://vocab.aodn.org.au/def/platform/151';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/152' WHERE uid = 'http://vocab.aodn.org.au/def/platform/152';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/153' WHERE uid = 'http://vocab.aodn.org.au/def/platform/153';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/154' WHERE uid = 'http://vocab.aodn.org.au/def/platform/154';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/155' WHERE uid = 'http://vocab.aodn.org.au/def/platform/155';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/156' WHERE uid = 'http://vocab.aodn.org.au/def/platform/156';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/157' WHERE uid = 'http://vocab.aodn.org.au/def/platform/157';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/158' WHERE uid = 'http://vocab.aodn.org.au/def/platform/158';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/159' WHERE uid = 'http://vocab.aodn.org.au/def/platform/159';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/160' WHERE uid = 'http://vocab.aodn.org.au/def/platform/160';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/161' WHERE uid = 'http://vocab.aodn.org.au/def/platform/161';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/162' WHERE uid = 'http://vocab.aodn.org.au/def/platform/162';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/163' WHERE uid = 'http://vocab.aodn.org.au/def/platform/163';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/164' WHERE uid = 'http://vocab.aodn.org.au/def/platform/164';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/165' WHERE uid = 'http://vocab.aodn.org.au/def/platform/165';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/166' WHERE uid = 'http://vocab.aodn.org.au/def/platform/166';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/167' WHERE uid = 'http://vocab.aodn.org.au/def/platform/167';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/168' WHERE uid = 'http://vocab.aodn.org.au/def/platform/168';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/169' WHERE uid = 'http://vocab.aodn.org.au/def/platform/169';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/170' WHERE uid = 'http://vocab.aodn.org.au/def/platform/170';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/171' WHERE uid = 'http://vocab.aodn.org.au/def/platform/171';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/172' WHERE uid = 'http://vocab.aodn.org.au/def/platform/172';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/173' WHERE uid = 'http://vocab.aodn.org.au/def/platform/173';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/174' WHERE uid = 'http://vocab.aodn.org.au/def/platform/174';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/175' WHERE uid = 'http://vocab.aodn.org.au/def/platform/175';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/176' WHERE uid = 'http://vocab.aodn.org.au/def/platform/176';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/177' WHERE uid = 'http://vocab.aodn.org.au/def/platform/177';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/178' WHERE uid = 'http://vocab.aodn.org.au/def/platform/178';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/179' WHERE uid = 'http://vocab.aodn.org.au/def/platform/179';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/180' WHERE uid = 'http://vocab.aodn.org.au/def/platform/180';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/181' WHERE uid = 'http://vocab.aodn.org.au/def/platform/181';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/182' WHERE uid = 'http://vocab.aodn.org.au/def/platform/182';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/183' WHERE uid = 'http://vocab.aodn.org.au/def/platform/183';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/184' WHERE uid = 'http://vocab.aodn.org.au/def/platform/184';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/185' WHERE uid = 'http://vocab.aodn.org.au/def/platform/185';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/186' WHERE uid = 'http://vocab.aodn.org.au/def/platform/186';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/187' WHERE uid = 'http://vocab.aodn.org.au/def/platform/187';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/188' WHERE uid = 'http://vocab.aodn.org.au/def/platform/188';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/189' WHERE uid = 'http://vocab.aodn.org.au/def/platform/189';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/190' WHERE uid = 'http://vocab.aodn.org.au/def/platform/190';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/191' WHERE uid = 'http://vocab.aodn.org.au/def/platform/191';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/192' WHERE uid = 'http://vocab.aodn.org.au/def/platform/192';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/193' WHERE uid = 'http://vocab.aodn.org.au/def/platform/193';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/194' WHERE uid = 'http://vocab.aodn.org.au/def/platform/194';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/195' WHERE uid = 'http://vocab.aodn.org.au/def/platform/195';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/196' WHERE uid = 'http://vocab.aodn.org.au/def/platform/196';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/197' WHERE uid = 'http://vocab.aodn.org.au/def/platform/197';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/198' WHERE uid = 'http://vocab.aodn.org.au/def/platform/198';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/199' WHERE uid = 'http://vocab.aodn.org.au/def/platform/199';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/200' WHERE uid = 'http://vocab.aodn.org.au/def/platform/200';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/201' WHERE uid = 'http://vocab.aodn.org.au/def/platform/201';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/202' WHERE uid = 'http://vocab.aodn.org.au/def/platform/202';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/203' WHERE uid = 'http://vocab.aodn.org.au/def/platform/203';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/204' WHERE uid = 'http://vocab.aodn.org.au/def/platform/204';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/205' WHERE uid = 'http://vocab.aodn.org.au/def/platform/205';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/206' WHERE uid = 'http://vocab.aodn.org.au/def/platform/206';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/207' WHERE uid = 'http://vocab.aodn.org.au/def/platform/207';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/208' WHERE uid = 'http://vocab.aodn.org.au/def/platform/208';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/209' WHERE uid = 'http://vocab.aodn.org.au/def/platform/209';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/210' WHERE uid = 'http://vocab.aodn.org.au/def/platform/210';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/211' WHERE uid = 'http://vocab.aodn.org.au/def/platform/211';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/212' WHERE uid = 'http://vocab.aodn.org.au/def/platform/212';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/213' WHERE uid = 'http://vocab.aodn.org.au/def/platform/213';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/214' WHERE uid = 'http://vocab.aodn.org.au/def/platform/214';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/215' WHERE uid = 'http://vocab.aodn.org.au/def/platform/215';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/216' WHERE uid = 'http://vocab.aodn.org.au/def/platform/216';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/217' WHERE uid = 'http://vocab.aodn.org.au/def/platform/217';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/218' WHERE uid = 'http://vocab.aodn.org.au/def/platform/218';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/219' WHERE uid = 'http://vocab.aodn.org.au/def/platform/219';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/220' WHERE uid = 'http://vocab.aodn.org.au/def/platform/220';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/221' WHERE uid = 'http://vocab.aodn.org.au/def/platform/221';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/222' WHERE uid = 'http://vocab.aodn.org.au/def/platform/222';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/223' WHERE uid = 'http://vocab.aodn.org.au/def/platform/223';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/224' WHERE uid = 'http://vocab.aodn.org.au/def/platform/224';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/225' WHERE uid = 'http://vocab.aodn.org.au/def/platform/225';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/226' WHERE uid = 'http://vocab.aodn.org.au/def/platform/226';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/227' WHERE uid = 'http://vocab.aodn.org.au/def/platform/227';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/228' WHERE uid = 'http://vocab.aodn.org.au/def/platform/228';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/229' WHERE uid = 'http://vocab.aodn.org.au/def/platform/229';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/230' WHERE uid = 'http://vocab.aodn.org.au/def/platform/230';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/231' WHERE uid = 'http://vocab.aodn.org.au/def/platform/231';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/232' WHERE uid = 'http://vocab.aodn.org.au/def/platform/232';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/233' WHERE uid = 'http://vocab.aodn.org.au/def/platform/233';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/234' WHERE uid = 'http://vocab.aodn.org.au/def/platform/234';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/235' WHERE uid = 'http://vocab.aodn.org.au/def/platform/235';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/236' WHERE uid = 'http://vocab.aodn.org.au/def/platform/236';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/238' WHERE uid = 'http://vocab.aodn.org.au/def/platform/238';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/239' WHERE uid = 'http://vocab.aodn.org.au/def/platform/239';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/240' WHERE uid = 'http://vocab.aodn.org.au/def/platform/240';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/241' WHERE uid = 'http://vocab.aodn.org.au/def/platform/241';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/242' WHERE uid = 'http://vocab.aodn.org.au/def/platform/242';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/243' WHERE uid = 'http://vocab.aodn.org.au/def/platform/243';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/244' WHERE uid = 'http://vocab.aodn.org.au/def/platform/244';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/245' WHERE uid = 'http://vocab.aodn.org.au/def/platform/245';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/246' WHERE uid = 'http://vocab.aodn.org.au/def/platform/246';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/247' WHERE uid = 'http://vocab.aodn.org.au/def/platform/247';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/248' WHERE uid = 'http://vocab.aodn.org.au/def/platform/248';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/249' WHERE uid = 'http://vocab.aodn.org.au/def/platform/249';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/250' WHERE uid = 'http://vocab.aodn.org.au/def/platform/250';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/252' WHERE uid = 'http://vocab.aodn.org.au/def/platform/252';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/253' WHERE uid = 'http://vocab.aodn.org.au/def/platform/253';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/254' WHERE uid = 'http://vocab.aodn.org.au/def/platform/254';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/255' WHERE uid = 'http://vocab.aodn.org.au/def/platform/255';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/256' WHERE uid = 'http://vocab.aodn.org.au/def/platform/256';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/257' WHERE uid = 'http://vocab.aodn.org.au/def/platform/257';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/258' WHERE uid = 'http://vocab.aodn.org.au/def/platform/258';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/259' WHERE uid = 'http://vocab.aodn.org.au/def/platform/259';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/260' WHERE uid = 'http://vocab.aodn.org.au/def/platform/260';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/261' WHERE uid = 'http://vocab.aodn.org.au/def/platform/261';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/262' WHERE uid = 'http://vocab.aodn.org.au/def/platform/262';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/263' WHERE uid = 'http://vocab.aodn.org.au/def/platform/263';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/264' WHERE uid = 'http://vocab.aodn.org.au/def/platform/264';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/265' WHERE uid = 'http://vocab.aodn.org.au/def/platform/265';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/266' WHERE uid = 'http://vocab.aodn.org.au/def/platform/266';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/267' WHERE uid = 'http://vocab.aodn.org.au/def/platform/267';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/268' WHERE uid = 'http://vocab.aodn.org.au/def/platform/268';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/269' WHERE uid = 'http://vocab.aodn.org.au/def/platform/269';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/270' WHERE uid = 'http://vocab.aodn.org.au/def/platform/270';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/271' WHERE uid = 'http://vocab.aodn.org.au/def/platform/271';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/272' WHERE uid = 'http://vocab.aodn.org.au/def/platform/272';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/273' WHERE uid = 'http://vocab.aodn.org.au/def/platform/273';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/274' WHERE uid = 'http://vocab.aodn.org.au/def/platform/274';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/275' WHERE uid = 'http://vocab.aodn.org.au/def/platform/275';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/277' WHERE uid = 'http://vocab.aodn.org.au/def/platform/277';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/278' WHERE uid = 'http://vocab.aodn.org.au/def/platform/278';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/279' WHERE uid = 'http://vocab.aodn.org.au/def/platform/279';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/280' WHERE uid = 'http://vocab.aodn.org.au/def/platform/280';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/281' WHERE uid = 'http://vocab.aodn.org.au/def/platform/281';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/282' WHERE uid = 'http://vocab.aodn.org.au/def/platform/282';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/283' WHERE uid = 'http://vocab.aodn.org.au/def/platform/283';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/284' WHERE uid = 'http://vocab.aodn.org.au/def/platform/284';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/285' WHERE uid = 'http://vocab.aodn.org.au/def/platform/285';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/287' WHERE uid = 'http://vocab.aodn.org.au/def/platform/287';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/288' WHERE uid = 'http://vocab.aodn.org.au/def/platform/288';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/289' WHERE uid = 'http://vocab.aodn.org.au/def/platform/289';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/290' WHERE uid = 'http://vocab.aodn.org.au/def/platform/290';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/291' WHERE uid = 'http://vocab.aodn.org.au/def/platform/291';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/293' WHERE uid = 'http://vocab.aodn.org.au/def/platform/293';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/294' WHERE uid = 'http://vocab.aodn.org.au/def/platform/294';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/295' WHERE uid = 'http://vocab.aodn.org.au/def/platform/295';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/296' WHERE uid = 'http://vocab.aodn.org.au/def/platform/296';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/297' WHERE uid = 'http://vocab.aodn.org.au/def/platform/297';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/298' WHERE uid = 'http://vocab.aodn.org.au/def/platform/298';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/299' WHERE uid = 'http://vocab.aodn.org.au/def/platform/299';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/300' WHERE uid = 'http://vocab.aodn.org.au/def/platform/300';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/301' WHERE uid = 'http://vocab.aodn.org.au/def/platform/301';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/302' WHERE uid = 'http://vocab.aodn.org.au/def/platform/302';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/303' WHERE uid = 'http://vocab.aodn.org.au/def/platform/303';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/304' WHERE uid = 'http://vocab.aodn.org.au/def/platform/304';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/305' WHERE uid = 'http://vocab.aodn.org.au/def/platform/305';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/306' WHERE uid = 'http://vocab.aodn.org.au/def/platform/306';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/307' WHERE uid = 'http://vocab.aodn.org.au/def/platform/307';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/308' WHERE uid = 'http://vocab.aodn.org.au/def/platform/308';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/309' WHERE uid = 'http://vocab.aodn.org.au/def/platform/309';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/310' WHERE uid = 'http://vocab.aodn.org.au/def/platform/310';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/311' WHERE uid = 'http://vocab.aodn.org.au/def/platform/311';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/312' WHERE uid = 'http://vocab.aodn.org.au/def/platform/312';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/313' WHERE uid = 'http://vocab.aodn.org.au/def/platform/313';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/314' WHERE uid = 'http://vocab.aodn.org.au/def/platform/314';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/315' WHERE uid = 'http://vocab.aodn.org.au/def/platform/315';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/316' WHERE uid = 'http://vocab.aodn.org.au/def/platform/316';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/317' WHERE uid = 'http://vocab.aodn.org.au/def/platform/317';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/318' WHERE uid = 'http://vocab.aodn.org.au/def/platform/318';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/319' WHERE uid = 'http://vocab.aodn.org.au/def/platform/319';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/320' WHERE uid = 'http://vocab.aodn.org.au/def/platform/320';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/321' WHERE uid = 'http://vocab.aodn.org.au/def/platform/321';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/322' WHERE uid = 'http://vocab.aodn.org.au/def/platform/322';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/323' WHERE uid = 'http://vocab.aodn.org.au/def/platform/323';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/324' WHERE uid = 'http://vocab.aodn.org.au/def/platform/324';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/325' WHERE uid = 'http://vocab.aodn.org.au/def/platform/325';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/326' WHERE uid = 'http://vocab.aodn.org.au/def/platform/326';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/327' WHERE uid = 'http://vocab.aodn.org.au/def/platform/327';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/328' WHERE uid = 'http://vocab.aodn.org.au/def/platform/328';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/329' WHERE uid = 'http://vocab.aodn.org.au/def/platform/329';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/330' WHERE uid = 'http://vocab.aodn.org.au/def/platform/330';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/331' WHERE uid = 'http://vocab.aodn.org.au/def/platform/331';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/332' WHERE uid = 'http://vocab.aodn.org.au/def/platform/332';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/333' WHERE uid = 'http://vocab.aodn.org.au/def/platform/333';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/334' WHERE uid = 'http://vocab.aodn.org.au/def/platform/334';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/335' WHERE uid = 'http://vocab.aodn.org.au/def/platform/335';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/336' WHERE uid = 'http://vocab.aodn.org.au/def/platform/336';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/337' WHERE uid = 'http://vocab.aodn.org.au/def/platform/337';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/338' WHERE uid = 'http://vocab.aodn.org.au/def/platform/338';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/339' WHERE uid = 'http://vocab.aodn.org.au/def/platform/339';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/340' WHERE uid = 'http://vocab.aodn.org.au/def/platform/340';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/341' WHERE uid = 'http://vocab.aodn.org.au/def/platform/341';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/342' WHERE uid = 'http://vocab.aodn.org.au/def/platform/342';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/343' WHERE uid = 'http://vocab.aodn.org.au/def/platform/343';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/344' WHERE uid = 'http://vocab.aodn.org.au/def/platform/344';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/345' WHERE uid = 'http://vocab.aodn.org.au/def/platform/345';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/346' WHERE uid = 'http://vocab.aodn.org.au/def/platform/346';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/347' WHERE uid = 'http://vocab.aodn.org.au/def/platform/347';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/453' WHERE uid = 'http://vocab.aodn.org.au/def/platform/453';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/454' WHERE uid = 'http://vocab.aodn.org.au/def/platform/454';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/455' WHERE uid = 'http://vocab.aodn.org.au/def/platform/455';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/456' WHERE uid = 'http://vocab.aodn.org.au/def/platform/456';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/457' WHERE uid = 'http://vocab.aodn.org.au/def/platform/457';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/458' WHERE uid = 'http://vocab.aodn.org.au/def/platform/458';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/459' WHERE uid = 'http://vocab.aodn.org.au/def/platform/459';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/460' WHERE uid = 'http://vocab.aodn.org.au/def/platform/460';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/461' WHERE uid = 'http://vocab.aodn.org.au/def/platform/461';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/462' WHERE uid = 'http://vocab.aodn.org.au/def/platform/462';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/463' WHERE uid = 'http://vocab.aodn.org.au/def/platform/463';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/464' WHERE uid = 'http://vocab.aodn.org.au/def/platform/464';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/465' WHERE uid = 'http://vocab.aodn.org.au/def/platform/465';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/466' WHERE uid = 'http://vocab.aodn.org.au/def/platform/466';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/467' WHERE uid = 'http://vocab.aodn.org.au/def/platform/467';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/468' WHERE uid = 'http://vocab.aodn.org.au/def/platform/468';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/469' WHERE uid = 'http://vocab.aodn.org.au/def/platform/469';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/470' WHERE uid = 'http://vocab.aodn.org.au/def/platform/470';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/471' WHERE uid = 'http://vocab.aodn.org.au/def/platform/471';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/472' WHERE uid = 'http://vocab.aodn.org.au/def/platform/472';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/473' WHERE uid = 'http://vocab.aodn.org.au/def/platform/473';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/474' WHERE uid = 'http://vocab.aodn.org.au/def/platform/474';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/475' WHERE uid = 'http://vocab.aodn.org.au/def/platform/475';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/560' WHERE uid = 'http://vocab.aodn.org.au/def/platform/560';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/561' WHERE uid = 'http://vocab.aodn.org.au/def/platform/561';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/726' WHERE uid = 'http://vocab.aodn.org.au/def/platform/726';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/platform/instance/727' WHERE uid = 'http://vocab.aodn.org.au/def/platform/727';

			-- Update instrument UID by adding type to the URL
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/33' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/33';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/37' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/37';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/38' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/38';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/39' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/39';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/490' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/490';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/531' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/531';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/532' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/532';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/537' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/537';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/538' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/538';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/545' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/545';
			UPDATE contr_vocab_db.vocabulary_term SET uid = 'http://vocab.aodn.org.au/def/instrument/type/553' WHERE uid = 'http://vocab.aodn.org.au/def/instrument/553';

			-- Update reference source id for all vocab term
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/75';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/77';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/84';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/90';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/91';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/92';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/94';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = NULL WHERE uid = 'http://vocab.aodn.org.au/def/parameter/97';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 3 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L06/current/16';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/121';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/123';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/124';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/181';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/22';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/301';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/355';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/356';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB40';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/POS17';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/379';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/186';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/130';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/CHLTMASS';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/CNDCZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/CHUMSS01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/SVELXXXX';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/TURBXXXX';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/LRZAZZZZ';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/INFLTF01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/CWETZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/EWDAZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/ESSAZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/MDMAP014';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/GCMXZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/GTCAZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/GWDRZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/GSPRZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/GSZZXXXX';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/XCO2DRAT';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/FCO2WTAT';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/XCO2WBDY';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/FCO2XXXX';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0036';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0668';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0625';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0674';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0673';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0696';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0191';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0667';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0724';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0705';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0190';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0198';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0689';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0446';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0719';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0720';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0260';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0195';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0704';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0672';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0741';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0081';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0127';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0126';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0677';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0671';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0726';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0725';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0083';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0666';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0193';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0120';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0722';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0723';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0680';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0670';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0727';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0707';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0712';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0640';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0215';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/NETT0044';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0267';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0266';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0018';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0445';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0017';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0054';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0369';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0490';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0617';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0100';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0047';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0040';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0173';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0528';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0663';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0023';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0019';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0053';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0042';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0268';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0020';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/NETT0026';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0037';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0121';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0676';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0675';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0669';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0684';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0685';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0679';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0688';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0687';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0682';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0683';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0706';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0708';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0702';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0703';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0721';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0728';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0729';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0730';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0731';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0058';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0710';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0733';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0732';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0416';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0181';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0665';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 2 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L22/current/TOOL0105';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/304';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/382';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/FFES';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/350';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/385';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/310';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/311';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/51';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/53';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/54';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/60';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/63';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB02';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/50';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/151';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/64';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/90';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/306';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/81';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/82';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/312';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB16';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB08';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB09';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB05';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB06';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB07';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/305';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/65';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/69';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/23';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/61';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/68';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/103';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB21';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/24';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB15';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB17';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB18';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB19';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB22';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB10';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB20';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/157';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/377';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB25';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/91';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/384';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/62';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/LAB39';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/111';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 1 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L05/current/308';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/LWRDZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/ERWSZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/NUMVALES';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/ERWDZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 3 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L06/current/74';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 3 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L06/current/27';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 3 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L06/current/70';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 3 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L06/current/37';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 3 WHERE uid = 'http://vocab.nerc.ac.uk/collection/L06/current/42';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/FLUOZZZZ';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/AHSFZZ01';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/ALLOXXPX';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/PERDXXXX';
			UPDATE contr_vocab_db.vocabulary_term SET reference_source_id = 6 WHERE uid = 'http://vocab.nerc.ac.uk/collection/P01/current/FUCXZZZZ';

			-- Update organisation_id used in the reference_source table
			UPDATE contr_vocab_db.reference_source SET organisation_id = 4 WHERE citation_string = '(L051) SeaDataNet device categories';
			UPDATE contr_vocab_db.reference_source SET organisation_id = 4 WHERE citation_string = '(L221) SeaVoX Device Catalogue';
			UPDATE contr_vocab_db.reference_source SET organisation_id = 4 WHERE citation_string = '(L061) SeaVoX Platform Categories';
			UPDATE contr_vocab_db.reference_source SET organisation_id = 4 WHERE citation_string = '(P173) Partnership for Observation of the Global Ocean ships of interest';
			UPDATE contr_vocab_db.reference_source SET organisation_id = 4 WHERE citation_string = '(P011) BODC Parameter Usage Vocabulary';
		</sql>
	</changeSet>

	<changeSet author="dnahodil and anguss" id="0049">
	    <validCheckSum>7:fc93583f081e021473b71a0c5f8a8389</validCheckSum>

		<sql>
			drop materialized view _rdf_m;
		</sql>

		<dropView viewName="_rdf" />
		<dropView viewName="_rdf_concept" />
		<dropView viewName="_skos_concept" />
		
		<createView viewName="_skos_concept" replaceIfExists="true">
			select
				c.name as subject,
				'skos:Concept'::varchar as rdf_type,
				c.label as skos_preflabel,
				c.description as skos_definition,
				c.date_added as dcterms_issued,
				-- should be issued ?
				null as dcterms_created,
				null as dc_source,
				null as dc_publisher,
				null as dc_description
			from classification_scheme_category c

			union all
			select
				vt.uid as subject,
				'skos:Concept'::varchar as rdf_type,
				vt.name as skos_preflabel,
				vt.definition as skos_definition,
				null as dcterms_issued,
				-- should be issued ?
				vt.date_added as dcterms_created,
			case
			when rs.citation_string is not null
				then rs.citation_string
				else vr.name
			end as dc_source,
			case
			when rso.name is not null
				then rso.name
				else vro.name
			end as dc_publisher,
			case
				when vr.uid = 'http://vocab.aodn.org.au/def/platform'
				then vt.ancillary_information
				else null
			end as dc_description
			from vocabulary_term vt

			left join vocabulary_register vr on vt.vocabulary_register_id = vr.id

			-- should be left, since we explicitly test for null
			left join reference_source rs on vt.reference_source_id = rs.id

			-- reference source organisation
			left join organisation rso on rs.organisation_id = rso.id
			-- vocabulary register organisation
			left join responsible_party rp on vr.owner_responsible_party_id = rp.id
			left join organisation vro on rp.organisation_id = vro.id
		</createView>

		<createView viewName="_rdf_concept">
			select
				c.subject as subject,
				'skos:prefLabel' as predicate,
				c.skos_preflabel as object
			from _skos_concept c
			union all
			select
				c.subject as subject,
				'rdf:type' as predicate,
				c.rdf_type as object
			from _skos_concept c
			union all
			select
				c.subject,
				'skos:definition'::varchar as predicate,
				c.skos_definition as object
			from _skos_concept c
			union all
			select
				c.subject,
				'dcterms:issued'::varchar as predicate,
				c.dcterms_issued::varchar as object
			from _skos_concept c
			where c.dcterms_issued is not null

			union all
			select
				s.subject,
				'skos:inScheme'::varchar as predicate,
				s.object
			from _skos_concept_skos_inscheme s

			union all
			select
				b.subject,
				'skos:broader'::varchar as predicate,
				b.object
			from _skos_concept_skos_broader b
			union all
			select
				n.subject,
				'skos:narrower'::varchar as predicate,
				n.object
			from _skos_concept_skos_narrower n
			union all
			select
				c.subject,
				'dcterms:created'::varchar as predicate,
				c.dcterms_created::varchar as object
			from _skos_concept c
			where c.dcterms_created is not null
			union all
			select
				c.subject,
				'dc:source'::varchar as predicate,
				c.dc_source as object
			from _skos_concept c
			where c.dc_source is not null
			union all
			select
				c.subject,
				'dc:publisher'::varchar as predicate,
				c.dc_publisher as object
			from _skos_concept c
			where c.dc_publisher is not null
			union all
			select
				s.subject,
				'skos:topConceptOf'::varchar as predicate,
				s.object
			from _skos_concept_skos_topconceptof s
			union all
			select
				c.subject,
				'dc:description'::varchar as predicate,
				c.dc_description as object
			from _skos_concept c
			where c.dc_description is not null
		</createView>

		<createView viewName="_rdf">
			select * from _rdf_concept_scheme
			union all select * from _rdf_concept
		</createView>

		<sql>
			create materialized view _rdf_m as select * from _rdf;
			create index on _rdf_m( object );
			create index on _rdf_m( subject );
			create index on _rdf_m( predicate );
		</sql>
	</changeSet>
	<changeSet author="smancini" id="0050">
		<sql>
			UPDATE contr_vocab_db.classification_scheme SET responsible_party_id = 2 WHERE responsible_party_id = 1;
			UPDATE contr_vocab_db.vocabulary_term SET proposer_responsible_party_id = 2 WHERE proposer_responsible_party_id = 1;
		</sql>	
	</changeSet>
	
	
	<changeSet author="smancini" id="0051">
	<!-- the user Sebastien Mancini was assigned to two different organisation IMOS and eMII.
		 the user Sebastien will now only be assigned to eMII	-->	
		<sql>
			DELETE FROM contr_vocab_db.responsible_party WHERE id = 1;
		</sql>	
		
	<!--	Fix issue with two categories not assigned to any high level classification
			UV radiation should be linked to Physical-Atmosphere
			backscattering should be linked to Physical-Water	-->	
		<sql>		
			INSERT INTO contr_vocab_db.classification_scheme_association (classification_scheme_category_id, parent_classification_scheme_category_id) VALUES
			(47,56),
			(48,53);
		</sql>		
		
	</changeSet>
	
	<!-- 	Update in the platform vocab and classification
			Same terms have been used to both describe a vocabulary term and a classification.
			A term should be unique.
			-->		
	<changeSet author="smancini" id="0052">
	<!-- 	Float should only be a category in the classification scheme and no longer used in the vocabulary term table	-->		
		<sql>		
			DELETE from contr_vocab_db.term_category_classification where vocabulary_term_id IN
			(SELECT r.vocabulary_term_id
			from contr_vocab_db.term_category_classification r
			inner join contr_vocab_db.vocabulary_term p
			on r.vocabulary_term_id = p.id
			where p.name = 'float'
			);
			DELETE from contr_vocab_db.vocabulary_term where name = 'float';
		</sql>		
	<!-- 	Satellite should only be a category in the classification scheme and no longer used in the vocabulary term table	-->			
		<sql>	
			DELETE from contr_vocab_db.term_category_classification where vocabulary_term_id IN
			(SELECT r.vocabulary_term_id
			from contr_vocab_db.term_category_classification r
			inner join contr_vocab_db.vocabulary_term p
			on r.vocabulary_term_id = p.id
			where p.name = 'satellite'
			);
			DELETE from contr_vocab_db.vocabulary_term where name = 'satellite';
		</sql>		
	<!-- 	Mooring should be an entry in the vocabulary term table.
			The corresponding classification category should be called Mooring and buoy	-->			
		<sql>	
			UPDATE contr_vocab_db.classification_scheme_category SET label = 'Mooring and buoy' WHERE label = 'Mooring'
		</sql>			

	<!-- 	AUV will be used as the classification category
			The vocabulary term will be modified so that it differs to the catageory-->	
		<sql>	
			UPDATE contr_vocab_db.vocabulary_term SET name = 'unmanned autonomous underwater vehicle' WHERE name = 'autonomous underwater vehicle'
		</sql>	
	<!-- 	Ship should be used as a vocabulary term and not as a category.
			Instead the category should be called Vessel-->	
		<sql>	
			UPDATE contr_vocab_db.classification_scheme_category SET label = 'Vessel' WHERE label = 'Ship'
		</sql>	
	<!-- 	Definition of top level category for platform classification
			This is useful when we produce a SKOS file so that it contains a reference to the top level concept-->			
		<sql>	
			INSERT INTO contr_vocab_db.classification_scheme_association (classification_scheme_category_id) VALUES
			(35),
			(36),
			(37),
			(39),
			(40),
			(41),
			(42),
			(43),
			(44);
		</sql>	
		
	</changeSet>
		<!-- 	Fix issues in the platform vocab and platform classification
			so that the SKOS files generated from the database will be ingested more easily PoolParty
			-->	
	<changeSet author="smancini" id="0053">	
	<!-- 	Update URIs in the classification_scheme_table to match 
			the name pattern expected by PoolParty-->	
		<sql>	
			UPDATE contr_vocab_db.classification_scheme SET name = 'http://vocab.aodn.org.au/platform_classes/1' WHERE name = 'http://vocab.aodn.org.au/def/ClassScheme/platform1';
		</sql>	
	<!-- 	Update URIs in the classification_scheme_category_table to match 
			the name pattern expected by PoolParty-->	
		<sql>	
			UPDATE contr_vocab_db.classification_scheme_category SET name = replace(name, '/def/ClassScheme/platform1/Category/', '/platform_classes/category/');
		</sql>	
	<!-- 	Update URIs in the vocabulary_register_table to match 
			the name pattern expected by PoolParty-->	
		<sql>	
			UPDATE contr_vocab_db.vocabulary_register SET uid = 'http://vocab.aodn.org.au/platform/1' WHERE uid = 'http://vocab.aodn.org.au/def/platform';			
		</sql>			
	<!-- 	Update URIs in the vocabulary_term_table to match 
			the name pattern expected by PoolParty-->	
		<sql>	
			UPDATE contr_vocab_db.vocabulary_term SET uid = replace(uid::text, '/def/platform/instance/', '/platform/entity/')::character(110);			
		</sql>	
	<!-- 	Clean the association_type_id in the internal_associated_terms table 
			problem with instruments wrongly assigned to the platform association type-->	
		<sql>	
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 806;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 807;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 809;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 810;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 811;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 812;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 813;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 814;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 815;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 816;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 817;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 818;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 819;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 820;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 821;
			UPDATE contr_vocab_db.internal_associated_terms SET association_type_id = 3 WHERE subject_vocabulary_term_id = 822;		
		</sql>	
	<!-- 	Creation of a new platform called small boat in order to respond to  
			several queries from users about the difficulty to understand self-propelled boat term-->	
		<sql>
			INSERT INTO contr_vocab_db.vocabulary_term (name, uid, short_name, ancillary_information, definition, alternative_term_expression, date_added, proposal_term_status, term_status, date_status_amended, term_notes, proposer_responsible_party_id, vocabulary_register_id, added_by_person_id, vocabulary_type_id) VALUES
			('small boat', 'http://vocab.aodn.org.au/platform/entity/823',
			'',
			'', 'A small self-propelled platform operating on the surface of the water column in unpredictable locations that is smaller than a ship but too large to easily remove from the water.', '', '2015-04-14 00:00:00', 'final',
			'valid', '2015-04-14 00:00:00', '', (
			SELECT r.id 
			from contr_vocab_db.responsible_party r 
			inner join contr_vocab_db.person p 
			on r.person_id = p.id 
			Where p.name like '%Mancini%'
			), (
			SELECT r.id 
			from contr_vocab_db.vocabulary_register r 
			Where r.uid like '%platform%'
			) , (
			SELECT r.id 
			from contr_vocab_db.person r 
			Where r.name like '%Mancini%'
			),  (
			SELECT r.id 
			from contr_vocab_db.vocabulary_type r 
			Where r.name like '%Platform%'
			)
			)
		</sql>	
	<!-- 	 Add exactmatch statement for the new vocabulary term small boat 
			and BODC term self propelled boat-->	
		<sql>	
			INSERT INTO contr_vocab_db.external_associated_terms (uid, vocabulary_term_id, association_type_id) VALUES
			('http://vocab.nerc.ac.uk/collection/L06/current/37', 
			(
			SELECT r.id 
			from contr_vocab_db.vocabulary_term r 
			Where r.name like '%small boat%'
			)
			, (
			SELECT r.id 
			from contr_vocab_db.association_type r 
			Where r.name like '%exactMatch%'
			)
			)		
		</sql>
	<!-- 	Remove self propelled boat from the term_category_classification table 
			-->	
		<sql>	
			DELETE from contr_vocab_db.term_category_classification where vocabulary_term_id IN
			(SELECT r.vocabulary_term_id
			from contr_vocab_db.term_category_classification r
			inner join contr_vocab_db.vocabulary_term p
			on r.vocabulary_term_id = p.id
			where p.name = 'self-propelled boat'
			);		
		</sql>	
	<!-- 	 Add small boat in the term_category_classification table
			-->	
		<sql>	
			INSERT INTO contr_vocab_db.term_category_classification (classification_scheme_category_id, vocabulary_term_id) VALUES
			(
			(SELECT r.id 
			from contr_vocab_db.classification_scheme_category r 
			Where r.label = 'Vessel'
			), (
			SELECT r.id 
			from contr_vocab_db.vocabulary_term r 
			Where r.name = 'small boat'
			)
			)		
		</sql>			
	<!-- 	Missing entries in the internal_associated_terms table for the following mooring 
			Bass strait calibration site mooring-->	
		<sql>	
			INSERT INTO contr_vocab_db.internal_associated_terms (subject_vocabulary_term_id, object_vocabulary_term_id, association_type_id) VALUES
			(
			(SELECT r.id 
			from contr_vocab_db.vocabulary_term r 
			Where r.name like '%Bass Strait Calibration%'
			), (
			SELECT r.id 
			from contr_vocab_db.vocabulary_term r 
			Where r.name like '%subsurface mooring%'
			), (
			SELECT r.id 
			from contr_vocab_db.association_type r 
			Where r.name = 'isInstanceOf'
			)
			)		
		</sql>	
	<!-- 	 Missing entries in the internal_associated_terms table for the following mooring 
			Storm Bay calibration site mooring-->	
		<sql>	
			INSERT INTO contr_vocab_db.internal_associated_terms (subject_vocabulary_term_id, object_vocabulary_term_id, association_type_id) VALUES
			(
			(SELECT r.id 
			from contr_vocab_db.vocabulary_term r 
			Where r.name like '%Storm Bay Calibration%'
			), (
			SELECT r.id 
			from contr_vocab_db.vocabulary_term r 
			Where r.name like '%subsurface mooring%'
			), (
			SELECT r.id 
			from contr_vocab_db.association_type r 
			Where r.name = 'isInstanceOf'
			)
			)		
		</sql>	
	
	</changeSet>	
</databaseChangeLog>
